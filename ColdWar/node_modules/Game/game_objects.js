	exports.Game = function( name , speed, cities ){
		this.gameId = GameId();
		this.status = "created";
		this.gameReadyStatus = 0;
		this.gameName = name;
		this.gameSpeed = speed;
		this.players = [];
		this.cities = cities;
		this.armies = [];
		this.missiles = [];
	
		this.update = function(){
			for (var i = 0; i < this.players.length; i++){
				this.players[i].update();
			}
			this.toString();//Development branch hook; delete on serverside
		}
		
		this.addPlayer = function( team ){
			console.log("attempting to join " + team);
			if (this.players.length >= 2) {
				console.log("Sorry, there are already two players in this game. Perhaps as a spectator?");
				return GameConstants.GAME_FULL;
			}
			if ( (this.players[0] != null) &&this.players[0].team == team) {
				console.log(this.players[0].team);
				console.log("Sorry, a player is already connected to that team.");
				return GameConstants.TEAM_FULL;
			}
			player = new Player(team);
			this.players.push(player);
			return GameConstants.NEW_PLAYER;
		}	


		
		this.missileLaunch = function(team, city_o, city_t, type){ //origin and target
		var missile;
			if (city_o.team == team && !city_t.isDead){ //We are shooting correctly, and at a city that is still standing
				switch (type) { //rework this with constants, what are you a noob
					case "conventional": 
						if (city_o.conventional_missiles > 0) {  missile = new Missile(city_o, city_t, type); };
						break;
					case "nuclear":
						if (city_o.nuclear_missiles > 0) {  missile = new Missile(city_o, city_t, type); };
						break;
					case "hydrogen":
						if (city_o.hydrogen_missiles > 0) { missile = new Missile(city_o, city_t, type); };
						break;
					default:
						break;
				}
				if (missile) {
                    missile.armed = true;				
					missiles.push(missile); //fuck my naming convention
					}
				}
		};
		
		this.toString = function(){
			var s = "Game name: " + this.gameName + "</br>";
				document.getElementById("game").innerHTML = s;
		};
	}	
